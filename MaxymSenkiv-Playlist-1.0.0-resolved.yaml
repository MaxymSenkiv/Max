---
openapi: 3.0.0
info:
  title: Playlist service
  description: This is a playlist service
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/MaxymSenkiv/Playlist/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /user:
    post:
      tags:
      - user
      summary: Create user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
      security:
      - owner_auth:
        - Private:Playlist
  /user/{username}:
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      security:
      - owner_auth:
        - Private:Playlist
  /PrivatePlaylist:
    post:
      tags:
      - PrivatePlaylist
      summary: Create PrivatePlaylist
      operationId: createPrivatePlaylist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivatePlaylist'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivatePlaylist'
  /PrivatePlaylist/{PrivatePlaylistId}:
    get:
      tags:
      - PrivatePlaylist
      summary: Get info about playlist by id
      operationId: GetPrivatePlaylist
      parameters:
      - name: PrivatePlaylistId
        in: path
        description: id of PrivatePlaylist
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivatePlaylist'
        "400":
          description: Invalid PrivatePlaylistId supplied
        "404":
          description: PrivatePlaylist not found
      security:
      - owner_auth:
        - Private:Playlist
    put:
      tags:
      - PrivatePlaylist
      summary: Updated PrivatePlaylist
      description: This can only be done by the logged in owner of the playlist.
      operationId: updatePrivatePlaylist
      parameters:
      - name: PrivatePlaylistId
        in: path
        description: PrivatePlaylist that need to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated PrivatePlaylist object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivatePlaylist'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivatePlaylist'
        "400":
          description: Invalid PrivatePlaylist supplied
        "404":
          description: PrivatePlaylist not found
      security:
      - owner_auth:
        - Private:Playlist
    delete:
      tags:
      - PrivatePlaylist
      summary: Delete PrivatePlaylist
      description: This can only be done by the logged in owner of the playlist.
      operationId: deletePrivatePlaylist
      parameters:
      - name: PrivatePlaylistId
        in: path
        description: The name that needs to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid PrivatePlaylistId supplied
        "404":
          description: PrivatePlaylist not found
      security:
      - owner_auth:
        - Private:Playlist
  /PublicPlaylist:
    post:
      tags:
      - PublicPlaylist
      summary: Create PublicPlaylist
      operationId: createPublicPlaylist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicPlaylist'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicPlaylist'
      security:
      - owner_auth:
        - Public:Playlist
  /PublicPlaylist/{PublicPlaylistId}:
    get:
      tags:
      - PublicPlaylist
      summary: Get info about playlist by id
      operationId: GetPublicPlaylist
      parameters:
      - name: PublicPlaylistId
        in: path
        description: id of PublicPlaylist
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicPlaylist'
        "400":
          description: Invalid PublicPlaylistId supplied
        "404":
          description: PublicPlaylist not found
    put:
      tags:
      - PublicPlaylist
      summary: Updated PublicPlaylist
      description: This can only be done by the logged in user.
      operationId: updatePublicPlaylist
      parameters:
      - name: PublicPlaylistId
        in: path
        description: PublicPlaylist that need to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated PublicPlaylist object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicPlaylist'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicPlaylist'
        "400":
          description: Invalid PublicPlaylist supplied
        "404":
          description: PublicPlaylist not found
      security:
      - owner_auth:
        - Public:Playlist
    delete:
      tags:
      - PublicPlaylist
      summary: Delete PublicPlaylist
      description: This can only be done by the logged in user.
      operationId: deletePublicPlaylist
      parameters:
      - name: PublicPlaylistId
        in: path
        description: The name that needs to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid PublicPlaylistId supplied
        "404":
          description: PublicPlaylist not found
      security:
      - owner_auth:
        - Public:Playlist
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        password:
          type: string
      xml:
        name: User
    PrivatePlaylist:
      type: object
      properties:
        id:
          type: integer
          format: int64
        playlist:
          type: array
          items:
            type: string
        owner:
          $ref: '#/components/schemas/User'
      xml:
        name: PrivatePlaylist
    PublicPlaylist:
      type: object
      properties:
        id:
          type: integer
          format: int64
        playlist:
          type: array
          items:
            type: string
      xml:
        name: PublicPlaylist
  securitySchemes:
    owner_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http:'
          scopes:
            Private:Playlist: owner modify and see his private playlist in his account
            Public:Playlist: logged user modify and see public playlist
